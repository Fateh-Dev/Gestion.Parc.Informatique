// <auto-generated />
using System;
using Gestion.Parc.Informatique.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion.Parc.Informatique.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("151d8b53-1fa5-4708-b024-f46594cfd1f9"),
                            Description = "Category 1",
                            DisplayFr = "Category 1",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("81baa055-4b3b-479b-ae62-08ad5e2eff5c"),
                            Description = "Category 2",
                            DisplayFr = "Category 2",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("640e56dc-8e93-4efd-8e2a-c049699ff3fc"),
                            Description = "Category 3",
                            DisplayFr = "Category 3",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("5a63a93b-c46c-4ed6-86a5-630aed3b6b6a"),
                            Description = "Category 4",
                            DisplayFr = "Category 4",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("a8c8e6bf-6483-483f-bcf0-1fb455fa4c87"),
                            Description = "Category 5",
                            DisplayFr = "Category 5",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Equipement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualPositionDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ActualPositionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int>("Etat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MarqueDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MarqueId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MesurmentUnite")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ModelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT");

                    b.Property<string>("OldPositionDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OldPositionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reference")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReformeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeConsommation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActualPositionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MarqueId");

                    b.HasIndex("ModelId");

                    b.ToTable("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Marque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = new Guid("634a44da-f4a6-4577-825f-662b65c00e99"),
                            Description = "HP",
                            DisplayFr = "HP",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("54c58f23-fd24-4868-89a6-785fb0928b9b"),
                            Description = "ACER",
                            DisplayFr = "ACER",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("5e1a63e0-1a1e-4214-98ef-167cf9b75b6a"),
                            Description = "FUJITSU",
                            DisplayFr = "FUJITSU",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("2b78c7ca-ccab-4b13-8a48-f228415b6545"),
                            Description = "DELL",
                            DisplayFr = "DELL",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("7c5eac5e-884b-4074-ab1b-71cc75821131"),
                            Description = "TOSHIBA",
                            DisplayFr = "TOSHIBA",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea2e0863-7eee-472f-a978-bd3ad8fc9fa8"),
                            Description = "Model 1",
                            DisplayFr = "Model 1",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("b6c55dbe-ae51-4238-a458-e3eb8b5bd3f9"),
                            Description = "Model 2",
                            DisplayFr = "Model 2",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("5b5da82f-7d33-4e07-a2b2-d4cc1d47f221"),
                            Description = "Model 3",
                            DisplayFr = "Model 3",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("1d109863-ef74-47e1-9f91-9d0e9e768345"),
                            Description = "Model 4",
                            DisplayFr = "Model 4",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("78b76535-d7ef-4c0a-aaf5-b2f487884c3f"),
                            Description = "Model 5",
                            DisplayFr = "Model 5",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Personne", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Personnes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ea47b50-f16f-4a8a-819e-2efbab498a07"),
                            Age = 1,
                            CreationTimeUtc = new DateTime(2023, 6, 17, 11, 2, 49, 4, DateTimeKind.Utc).AddTicks(6936),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Order = 0,
                            Prenom = "Djawed"
                        },
                        new
                        {
                            Id = new Guid("5191217b-fa7c-4967-9672-afa0e0d7ba7d"),
                            Age = 32,
                            CreationTimeUtc = new DateTime(2023, 6, 17, 11, 2, 49, 4, DateTimeKind.Utc).AddTicks(7082),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Order = 0,
                            Prenom = "Nadjib"
                        },
                        new
                        {
                            Id = new Guid("8c2149a4-ceba-43c1-97b0-f9cc53ffa240"),
                            Age = 30,
                            CreationTimeUtc = new DateTime(2023, 6, 17, 11, 2, 49, 4, DateTimeKind.Utc).AddTicks(7088),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Order = 0,
                            Prenom = "Fateh"
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AppName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("StructureId")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Structure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParentStructureId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Structures");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Ordre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_Permissions");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_Roles");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("_RolePermissions");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Djawed",
                            LastName = "Djehinet",
                            PasswordHash = "$2a$11$4HvPAEP.KKlCG/N6AsvwcOoJHJiOYf2azHBInCHeqbB5YwDy6/y1C",
                            Username = "Djawed"
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_UserLogins");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("_UserRoles");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Equipement", b =>
                {
                    b.HasOne("Gestion.Parc.Informatique.Data.Structure", "ActualStructureObject")
                        .WithMany("Equipements")
                        .HasForeignKey("ActualPositionId");

                    b.HasOne("Gestion.Parc.Informatique.Data.Category", "CategoryObject")
                        .WithMany("Equipements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Data.Marque", "MarqueObject")
                        .WithMany("Equipements")
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Data.Model", "ModelObject")
                        .WithMany("Equipements")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActualStructureObject");

                    b.Navigation("CategoryObject");

                    b.Navigation("MarqueObject");

                    b.Navigation("ModelObject");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.RolePermission", b =>
                {
                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.UserRole", b =>
                {
                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Category", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Marque", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Model", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Structure", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
