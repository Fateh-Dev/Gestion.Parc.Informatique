// <auto-generated />
using System;
using Gestion.Parc.Informatique.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion.Parc.Informatique.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20230611164826_newDataSeed")]
    partial class newDataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9264c8e-d4c4-4a32-be52-dbb5393a7a31"),
                            Description = "Category 1",
                            DisplayFr = "Category 1",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("eaeb0684-b0da-428c-8ec5-e42eb028066d"),
                            Description = "Category 2",
                            DisplayFr = "Category 2",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("25d247d5-e703-4a50-b745-d9cf8203caae"),
                            Description = "Category 3",
                            DisplayFr = "Category 3",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("e47df604-154c-4e58-a50a-de0eca2b3e7b"),
                            Description = "Category 4",
                            DisplayFr = "Category 4",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("013f566e-8d30-4d95-8b33-42e4a0b338ae"),
                            Description = "Category 5",
                            DisplayFr = "Category 5",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Equipement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualPositionDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ActualPositionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int>("Etat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MarqueDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MarqueId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MesurmentUnite")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ModelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT");

                    b.Property<string>("OldPositionDisplay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OldPositionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reference")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReformeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeConsommation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActualPositionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MarqueId");

                    b.HasIndex("ModelId");

                    b.ToTable("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Marque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8f149c8-3b26-46ec-bd2d-abbe1424848d"),
                            Description = "HP",
                            DisplayFr = "HP",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("d14f4b20-7c4a-4da1-8182-317f922849ab"),
                            Description = "ACER",
                            DisplayFr = "ACER",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("72b670f4-e936-4215-8be1-678d5b24ac96"),
                            Description = "FUJITSU",
                            DisplayFr = "FUJITSU",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("b5bd3515-f734-47d5-9b2c-1c28384adb99"),
                            Description = "DELL",
                            DisplayFr = "DELL",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("a82bb24b-9215-42f3-88d4-7a1948cff06f"),
                            Description = "TOSHIBA",
                            DisplayFr = "TOSHIBA",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ebdc9de-9cbe-45eb-a414-ec391605b5ca"),
                            Description = "Model 1",
                            DisplayFr = "Model 1",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("7b655c44-0d3c-46d9-a5a5-37d6f88501b9"),
                            Description = "Model 2",
                            DisplayFr = "Model 2",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("3dc56ce3-9afb-48f7-86a5-8cb1e52887a3"),
                            Description = "Model 3",
                            DisplayFr = "Model 3",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("d7715320-cd75-4c48-bc0b-31f5bad93cf9"),
                            Description = "Model 4",
                            DisplayFr = "Model 4",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("c557e6cb-ae17-4e20-9044-2798b4c1b8e1"),
                            Description = "Model 5",
                            DisplayFr = "Model 5",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Personne", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Personnes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21b7ea8b-4e14-447f-8336-f8b70fcf0ea6"),
                            Age = 1,
                            CreationTimeUtc = new DateTime(2023, 6, 11, 16, 48, 23, 204, DateTimeKind.Utc).AddTicks(6802),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Order = 0,
                            Prenom = "Djawed"
                        },
                        new
                        {
                            Id = new Guid("7907c627-624b-490b-9870-5dcea12a61e5"),
                            Age = 32,
                            CreationTimeUtc = new DateTime(2023, 6, 11, 16, 48, 23, 204, DateTimeKind.Utc).AddTicks(6860),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Order = 0,
                            Prenom = "Nadjib"
                        },
                        new
                        {
                            Id = new Guid("5e06237f-aa27-4ef7-8372-a984353aa614"),
                            Age = 30,
                            CreationTimeUtc = new DateTime(2023, 6, 11, 16, 48, 23, 204, DateTimeKind.Utc).AddTicks(6865),
                            IsDeleted = false,
                            Nom = "Djehinet",
                            Order = 0,
                            Prenom = "Fateh"
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AppName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("StructureId")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Structure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParentStructureId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Structures");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayFr")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Ordre")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_Permissions");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_Roles");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("_RolePermissions");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "djawed",
                            LastName = "djehinet",
                            PasswordHash = "$2a$11$EYjFiD/mUA9eCtNuS6O.du.ezBbIIaq1WQqUydaA8tmX/cC5bDVFK",
                            Username = "djawed"
                        });
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("_UserLogins");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("_UserRoles");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Equipement", b =>
                {
                    b.HasOne("Gestion.Parc.Informatique.Data.Structure", "ActualStructureObject")
                        .WithMany("Equipements")
                        .HasForeignKey("ActualPositionId");

                    b.HasOne("Gestion.Parc.Informatique.Data.Category", "CategoryObject")
                        .WithMany("Equipements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Data.Marque", "MarqueObject")
                        .WithMany("Equipements")
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Data.Model", "ModelObject")
                        .WithMany("Equipements")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActualStructureObject");

                    b.Navigation("CategoryObject");

                    b.Navigation("MarqueObject");

                    b.Navigation("ModelObject");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.RolePermission", b =>
                {
                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.UserRole", b =>
                {
                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.Parc.Informatique.Models.Auth.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Category", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Marque", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Model", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Data.Structure", b =>
                {
                    b.Navigation("Equipements");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gestion.Parc.Informatique.Models.Auth.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
